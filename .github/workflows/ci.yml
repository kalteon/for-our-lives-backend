name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run JUnit tests
        run: ./gradlew test

      - name: Save the built artifact
        uses: actions/upload-artifact@v2
        with:
          name: spring-boot-app
          path: build/libs/*.jar

      - name: Build Docker image
        run: docker build -t for-our-lives-diary .

      - name: Push Docker image to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_IMAGE_NAME: 'for-our-lives-diary'
          DOCKER_PASSWORD: ${{ secrets.DOCKER_ACCESS_TOKEN }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker tag $DOCKER_IMAGE_NAME $DOCKER_USERNAME/$DOCKER_IMAGE_NAME
          docker push $DOCKER_USERNAME/$DOCKER_IMAGE_NAME

  deploy:
    runs-on: self-hosted
    needs: build

    steps:
      - name: Pull and run Docker image on EC2
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_IMAGE_NAME: 'for-our-lives-diary'
          DOCKER_PASSWORD: ${{ secrets.DOCKER_ACCESS_TOKEN }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker pull $DOCKER_USERNAME/$DOCKER_IMAGE_NAME
          docker stop server || true
          docker rm server || true
          docker run -d --name server -p 8080:8080 $DOCKER_USERNAME/$DOCKER_IMAGE_NAME
