name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run JUnit tests
        run: ./gradlew test

      - name: Save the built artifact
        uses: actions/upload-artifact@v2
        with:
          name: spring-boot-app
          path: build/libs/*.jar

      - name: Build Docker image
        run: docker build -t for-our-lives-diary .

      - name: Push Docker image to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_IMAGE_NAME: 'for-our-lives-diary'
          DOCKER_PASSWORD: ${{ secrets.DOCKER_ACCESS_TOKEN }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker tag for-our-lives-diary $DOCKER_USERNAME/for-our-lives-diary
          docker push $DOCKER_USERNAME/for-our-lives-diary

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Check if Docker is installed
        run: |
          if ! command -v docker &> /dev/null
          then
            echo "Docker could not be found, installing..."
            curl -fsSL https://get.docker.com -o get-docker.sh
            sh get-docker.sh
          else
            echo "Docker is already installed"
          fi

      - name: Log in to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_ACCESS_TOKEN }}
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

      - name: Pull and run Docker image on EC2
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          docker pull $DOCKER_USERNAME/for-our-lives-diary
          docker stop server || true
          docker rm server || true
          docker run -d --name server -p 8080:8080 \
            -e SPRING_PROFILES_ACTIVE=prod \
            -e DB_HOST=$DB_HOST \
            -e DB_PORT=$DB_PORT \
            -e DB_NAME=$DB_NAME \
            -e DB_USERNAME=$DB_USERNAME \
            -e DB_PASSWORD=$DB_PASSWORD \
            -e GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID \
            -e GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET \
            -e JWT_SECRET=$JWT_SECRET \
            $DOCKER_USERNAME/for-our-lives-diary
